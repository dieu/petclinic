launch:
    parameters:
        - app-tier-size:
            description: Number of servers in app tier
            default: 1
            min: 1
            max: 20
        - app-fork:
            description: Source control fork
            default: "dieu"
        - app-branch:
            description: Source control branch
            default: "HEAD"
        - app-version:
            description: Version of the build artifacts
            default: "1.0.0-SNAPSHOT"
            enum:
                "Latest": "1.0.0-SNAPSHOT"
                "Stable": "1.0.0"
    steps:
        - provision-db-tier:
            action: compute.grow
            parameters:
                roleName: db-node
            output:
                 db-hosts: ips
 
        - provision-app-tier:
            action: compute.grow
            parameters:
                roleName: app-node
                quantity: ${app-tier-size}
            output:
                app-hosts: ips
 
        - provision-lb:
            action: compute.grow
            parameters:
                roleName: lb-node
            output:
                lb-hosts: ips
 
        - install-database:
            action: mysql.install
            phase: install-db
            parameters:
                roles: [ db-node ]
 
 
        - install-app:
            action: tomcat.install
            phase: install-app
            parameters:
                roles: [ app-node ]
 
        - install-lb:
            action: haproxy.install
            phase: install-lb
            parameters:
                roles: [ lb-node ]
 
        - deploy-database:
            action: mysql.create-database
            phase: deploy-db
            precedingPhases: [ install-db ]
            parameters:
                roles: [ db-node ]
                jattrs:
                    database:
                        name: "petclinic"
                        schema: "https://raw.github.com/${app-fork}/petclinic/${app-branch}/src/main/resources/db/mysql/petclinic-mysql-schema.sql"
                        data:   "https://raw.github.com/${app-fork}/petclinic/${app-branch}/src/main/resources/db/mysql/petclinic-mysql-dataload.sql"
 
        - deploy-app:
            action: war.deploy
            phase: deploy-app
            precedingPhases: [ install-app ]
            parameters:
                roles: [ app-node ]
                jattrs:
                    war:
                        deploy: "https://s3.amazonaws.com/undeploy-petstore/${app-fork}/origin/${app-branch}/petclinic-${app-version}.war"
 
        - configure-datasource:
            action: propfile.configure
            phase: configure-app
            precedingPhases: [ deploy-app, deploy-db ]
            parameters:
                roles: [ app-node ]
                jattrs:
                    configure:
                        source: "https://raw.github.com/${app-fork}/petclinic/${app-branch}/src/main/resources/db/mysql/petclinic-database.properties.erb"
                        to: "classes/jdbc.properties"
                        variables:
                            hosts: ${db-hosts}
                            database: "petclinic"
 
        - setup-lb:
            action: haproxy.rebalance
            precedingPhases: [ deploy-app ]
            parameters:
                roles: [ lb-node ]
                jattrs:
                    haproxy.rebalance:
                        nodes: ${app-hosts}
 
    return:
        app-url:
            description: Url to the application
            value: http://${lb-hosts}
        haproxy-url:
            description: Url to haproxy stats
            value: http://${lb-hosts}:22002/
 
scale-up:
    parameters:
        - app-count:
            description: Additional servers in app tier
            default: 1
            min: 1
            max: 20
        - app-fork:
            description: Source control fork
            default: "dieu"
        - app-branch:
            description: Source control branch
            default: "HEAD"
        - app-version:
            description: Version of the build artifacts
            default: "1.0.0-SNAPSHOT"
            enum:
                "Latest": "1.0.0-SNAPSHOT"
                "Stable": "1.0.0"
 
    steps:
        - grow-app-tier:
            action: compute.grow
            parameters:
                roleName: app-node
                quantity: ${app-count}
            output:
                app-hosts: ips
 
        - install-app:
            action: tomcat.install
            phase: install-app
            parameters:
                roles: [ app-node ]
 
        - deploy-app:
            action: war.deploy
            phase: deploy-app
            precedingPhases: [ install-app ]
            parameters:
                roles: [ app-node ]
                jattrs:
                    war:
                        deploy: "https://s3.amazonaws.com/undeploy-petstore/${app-fork}/origin/${app-branch}/petclinic-${app-version}.war"
 
        - configure-datasource:
            action: propfile.configure
            phase: configure-app
            precedingPhases: [ deploy-app ]
            parameters:
                roles: [ app-node ]
                jattrs:
                    configure:
                        source: "https://raw.github.com/${app-fork}/petclinic/${app-branch}/src/main/resources/db/mysql/petclinic-database.properties.erb"
                        to: "classes/jdbc.properties"
                        variables:
                            hosts: ${db-hosts}
                            database: "petclinic"
 
        - update-lb:
            action: haproxy.rebalance
            precedingPhases: [ deploy-app ]
            parameters:
                roles: [ lb-node ]
                jattrs:
                    haproxy.rebalance:
                        nodes: ${app-hosts}
 
scale-down:
    parameters:
        - app-count:
            description: Number of app tier servers to remove
            default: 1
            min: 1
            max: 20
    steps:
        - shrink-app-tier:
            action: compute.shrink
            parameters:
                roleName: app-node
                quantity: ${app-count}
 
        - update-lb:
            action: haproxy.rebalance
            precedingPhases: [ destroy ]
            parameters:
                roles: [ lb-node ]
                jattrs:
                    haproxy.rebalance:
                        nodes: ${app-hosts}
 
update:
    parameters:
        - app-fork:
            description: Source control fork
            default: "dieu"
        - app-branch:
            description: Source control branch
            default: "HEAD"
        - app-version:
            description: Version of the build artifacts
            default: "1.0.0-SNAPSHOT"
            enum:
                "Latest": "1.0.0-SNAPSHOT"
                "Stable": "1.0.0"
 
    steps:
        - redeploy-app:
            action: war.deploy
            phase: deploy-app
            parameters:
                roles: [ app-node ]
                jattrs:
                    war:
                        deploy: "https://s3.amazonaws.com/undeploy-petstore/${app-fork}/origin/${app-branch}/petclinic-${app-version}.war"
 
        - configure-datasource:
            action: propfile.configure
            phase: configure-app
            precedingPhases: [ deploy-app ]
            parameters:
                roles: [ app-node ]
                jattrs:
                    configure:
                        source: "https://raw.github.com/${app-fork}/petclinic/${app-branch}/src/main/resources/db/mysql/petclinic-database.properties.erb"
                        to: "classes/jdbc.properties"
                        variables:
                            hosts: ${db-hosts}
                            database: "petclinic"
 
destroy:
    steps:
        - destroy:
            action: compute.shrink-all
